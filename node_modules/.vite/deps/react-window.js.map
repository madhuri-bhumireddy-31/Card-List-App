{"version":3,"file":"react-window.js","names":["e","t","setPrototypeOf","isEqual","defaultItemKey","getEstimatedTotalHeight","getEstimatedTotalWidth","memoizeOne","PureComponent","validateSharedProps","getItemMetadata","size","findNearestItem","findNearestItemBinarySearch","findNearestItemExponentialSearch","getOffsetForIndexAndAlignment","getEstimatedTotalSize"],"sources":["../../@babel/runtime/helpers/esm/extends.js","../../@babel/runtime/helpers/esm/assertThisInitialized.js","../../@babel/runtime/helpers/esm/setPrototypeOf.js","../../@babel/runtime/helpers/esm/inheritsLoose.js","../../memoize-one/dist/memoize-one.esm.js","../../@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../react-window/dist/index.esm.js"],"sourcesContent":["function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","function _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nexport { _assertThisInitialized as default };","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\nvar hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\nvar now = hasNativePerformanceNow ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\nfunction cancelTimeout(timeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\nfunction requestTimeout(callback, delay) {\n  var start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  var timeoutID = {\n    id: requestAnimationFrame(tick)\n  };\n  return timeoutID;\n}\n\nvar size = -1; // This utility copied from \"dom-helpers\" package.\n\nfunction getScrollbarSize(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (size === -1 || recalculate) {\n    var div = document.createElement('div');\n    var style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n    document.body.appendChild(div);\n    size = div.offsetWidth - div.clientWidth;\n    document.body.removeChild(div);\n  }\n\n  return size;\n}\nvar cachedRTLResult = null; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\n\nfunction getRTLOffsetType(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (cachedRTLResult === null || recalculate) {\n    var outerDiv = document.createElement('div');\n    var outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n    var innerDiv = document.createElement('div');\n    var innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n    outerDiv.appendChild(innerDiv);\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nvar defaultItemKey = function defaultItemKey(_ref) {\n  var columnIndex = _ref.columnIndex,\n      data = _ref.data,\n      rowIndex = _ref.rowIndex;\n  return rowIndex + \":\" + columnIndex;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsOverscanCount = null;\nvar devWarningsOverscanRowsColumnsCount = null;\nvar devWarningsTagName = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = /*#__PURE__*/new WeakSet();\n    devWarningsOverscanRowsColumnsCount = /*#__PURE__*/new WeakSet();\n    devWarningsTagName = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createGridComponent(_ref2) {\n  var _class;\n\n  var getColumnOffset = _ref2.getColumnOffset,\n      getColumnStartIndexForOffset = _ref2.getColumnStartIndexForOffset,\n      getColumnStopIndexForStartIndex = _ref2.getColumnStopIndexForStartIndex,\n      getColumnWidth = _ref2.getColumnWidth,\n      getEstimatedTotalHeight = _ref2.getEstimatedTotalHeight,\n      getEstimatedTotalWidth = _ref2.getEstimatedTotalWidth,\n      getOffsetForColumnAndAlignment = _ref2.getOffsetForColumnAndAlignment,\n      getOffsetForRowAndAlignment = _ref2.getOffsetForRowAndAlignment,\n      getRowHeight = _ref2.getRowHeight,\n      getRowOffset = _ref2.getRowOffset,\n      getRowStartIndexForOffset = _ref2.getRowStartIndexForOffset,\n      getRowStopIndexForStartIndex = _ref2.getRowStopIndexForStartIndex,\n      initInstanceProps = _ref2.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref2.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref2.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(Grid, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function Grid(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._resetIsScrollingTimeoutId = null;\n      _this._outerRef = void 0;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        horizontalScrollDirection: 'forward',\n        scrollLeft: typeof _this.props.initialScrollLeft === 'number' ? _this.props.initialScrollLeft : 0,\n        scrollTop: typeof _this.props.initialScrollTop === 'number' ? _this.props.initialScrollTop : 0,\n        scrollUpdateWasRequested: false,\n        verticalScrollDirection: 'forward'\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanColumnStartIndex, overscanColumnStopIndex, overscanRowStartIndex, overscanRowStopIndex, visibleColumnStartIndex, visibleColumnStopIndex, visibleRowStartIndex, visibleRowStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanColumnStartIndex: overscanColumnStartIndex,\n          overscanColumnStopIndex: overscanColumnStopIndex,\n          overscanRowStartIndex: overscanRowStartIndex,\n          overscanRowStopIndex: overscanRowStopIndex,\n          visibleColumnStartIndex: visibleColumnStartIndex,\n          visibleColumnStopIndex: visibleColumnStopIndex,\n          visibleRowStartIndex: visibleRowStartIndex,\n          visibleRowStopIndex: visibleRowStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          horizontalScrollDirection: horizontalScrollDirection,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          verticalScrollDirection: verticalScrollDirection,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (rowIndex, columnIndex) {\n        var _this$props = _this.props,\n            columnWidth = _this$props.columnWidth,\n            direction = _this$props.direction,\n            rowHeight = _this$props.rowHeight;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && columnWidth, shouldResetStyleCacheOnItemSizeChange && direction, shouldResetStyleCacheOnItemSizeChange && rowHeight);\n\n        var key = rowIndex + \":\" + columnIndex;\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(key)) {\n          style = itemStyleCache[key];\n        } else {\n          var _offset = getColumnOffset(_this.props, columnIndex, _this._instanceProps);\n\n          var isRtl = direction === 'rtl';\n          itemStyleCache[key] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : _offset,\n            right: isRtl ? _offset : undefined,\n            top: getRowOffset(_this.props, rowIndex, _this._instanceProps),\n            height: getRowHeight(_this.props, rowIndex, _this._instanceProps),\n            width: getColumnWidth(_this.props, columnIndex, _this._instanceProps)\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScroll = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientHeight = _event$currentTarget.clientHeight,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollTop = _event$currentTarget.scrollTop,\n            scrollHeight = _event$currentTarget.scrollHeight,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n\n          var calculatedScrollLeft = scrollLeft;\n\n          if (direction === 'rtl') {\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                calculatedScrollLeft = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          calculatedScrollLeft = Math.max(0, Math.min(calculatedScrollLeft, scrollWidth - clientWidth));\n          var calculatedScrollTop = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n            scrollLeft: calculatedScrollLeft,\n            scrollTop: calculatedScrollTop,\n            verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1);\n        });\n      };\n\n      return _this;\n    }\n\n    Grid.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = Grid.prototype;\n\n    _proto.scrollTo = function scrollTo(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(function (prevState) {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward'\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(_ref4) {\n      var _ref4$align = _ref4.align,\n          align = _ref4$align === void 0 ? 'auto' : _ref4$align,\n          columnIndex = _ref4.columnIndex,\n          rowIndex = _ref4.rowIndex;\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          height = _this$props2.height,\n          rowCount = _this$props2.rowCount,\n          width = _this$props2.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n      var scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps); // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n\n      var horizontalScrollbarSize = estimatedTotalWidth > width ? scrollbarSize : 0;\n      var verticalScrollbarSize = estimatedTotalHeight > height ? scrollbarSize : 0;\n      this.scrollTo({\n        scrollLeft: columnIndex !== undefined ? getOffsetForColumnAndAlignment(this.props, columnIndex, align, scrollLeft, this._instanceProps, verticalScrollbarSize) : scrollLeft,\n        scrollTop: rowIndex !== undefined ? getOffsetForRowAndAlignment(this.props, rowIndex, align, scrollTop, this._instanceProps, horizontalScrollbarSize) : scrollTop\n      });\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          initialScrollLeft = _this$props3.initialScrollLeft,\n          initialScrollTop = _this$props3.initialScrollTop;\n\n      if (this._outerRef != null) {\n        var outerRef = this._outerRef;\n\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var direction = this.props.direction;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollTop = _this$state2.scrollTop,\n          scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        var outerRef = this._outerRef;\n\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n\n            default:\n              var clientWidth = outerRef.clientWidth,\n                  scrollWidth = outerRef.scrollWidth;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          columnCount = _this$props4.columnCount,\n          direction = _this$props4.direction,\n          height = _this$props4.height,\n          innerRef = _this$props4.innerRef,\n          innerElementType = _this$props4.innerElementType,\n          innerTagName = _this$props4.innerTagName,\n          itemData = _this$props4.itemData,\n          _this$props4$itemKey = _this$props4.itemKey,\n          itemKey = _this$props4$itemKey === void 0 ? defaultItemKey : _this$props4$itemKey,\n          outerElementType = _this$props4.outerElementType,\n          outerTagName = _this$props4.outerTagName,\n          rowCount = _this$props4.rowCount,\n          style = _this$props4.style,\n          useIsScrolling = _this$props4.useIsScrolling,\n          width = _this$props4.width;\n      var isScrolling = this.state.isScrolling;\n\n      var _this$_getHorizontalR = this._getHorizontalRangeToRender(),\n          columnStartIndex = _this$_getHorizontalR[0],\n          columnStopIndex = _this$_getHorizontalR[1];\n\n      var _this$_getVerticalRan = this._getVerticalRangeToRender(),\n          rowStartIndex = _this$_getVerticalRan[0],\n          rowStopIndex = _this$_getVerticalRan[1];\n\n      var items = [];\n\n      if (columnCount > 0 && rowCount) {\n        for (var _rowIndex = rowStartIndex; _rowIndex <= rowStopIndex; _rowIndex++) {\n          for (var _columnIndex = columnStartIndex; _columnIndex <= columnStopIndex; _columnIndex++) {\n            items.push(createElement(children, {\n              columnIndex: _columnIndex,\n              data: itemData,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              key: itemKey({\n                columnIndex: _columnIndex,\n                data: itemData,\n                rowIndex: _rowIndex\n              }),\n              rowIndex: _rowIndex,\n              style: this._getItemStyle(_rowIndex, _columnIndex)\n            }));\n          }\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: this._onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: estimatedTotalHeight,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: estimatedTotalWidth\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      var _this$props5 = this.props,\n          columnCount = _this$props5.columnCount,\n          onItemsRendered = _this$props5.onItemsRendered,\n          onScroll = _this$props5.onScroll,\n          rowCount = _this$props5.rowCount;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          var _this$_getHorizontalR2 = this._getHorizontalRangeToRender(),\n              _overscanColumnStartIndex = _this$_getHorizontalR2[0],\n              _overscanColumnStopIndex = _this$_getHorizontalR2[1],\n              _visibleColumnStartIndex = _this$_getHorizontalR2[2],\n              _visibleColumnStopIndex = _this$_getHorizontalR2[3];\n\n          var _this$_getVerticalRan2 = this._getVerticalRangeToRender(),\n              _overscanRowStartIndex = _this$_getVerticalRan2[0],\n              _overscanRowStopIndex = _this$_getVerticalRan2[1],\n              _visibleRowStartIndex = _this$_getVerticalRan2[2],\n              _visibleRowStopIndex = _this$_getVerticalRan2[3];\n\n          this._callOnItemsRendered(_overscanColumnStartIndex, _overscanColumnStopIndex, _overscanRowStartIndex, _overscanRowStopIndex, _visibleColumnStartIndex, _visibleColumnStopIndex, _visibleRowStartIndex, _visibleRowStopIndex);\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        var _this$state3 = this.state,\n            _horizontalScrollDirection = _this$state3.horizontalScrollDirection,\n            _scrollLeft = _this$state3.scrollLeft,\n            _scrollTop = _this$state3.scrollTop,\n            _scrollUpdateWasRequested = _this$state3.scrollUpdateWasRequested,\n            _verticalScrollDirection = _this$state3.verticalScrollDirection;\n\n        this._callOnScroll(_scrollLeft, _scrollTop, _horizontalScrollDirection, _verticalScrollDirection, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getHorizontalRangeToRender = function _getHorizontalRangeToRender() {\n      var _this$props6 = this.props,\n          columnCount = _this$props6.columnCount,\n          overscanColumnCount = _this$props6.overscanColumnCount,\n          overscanColumnsCount = _this$props6.overscanColumnsCount,\n          overscanCount = _this$props6.overscanCount,\n          rowCount = _this$props6.rowCount;\n      var _this$state4 = this.state,\n          horizontalScrollDirection = _this$state4.horizontalScrollDirection,\n          isScrolling = _this$state4.isScrolling,\n          scrollLeft = _this$state4.scrollLeft;\n      var overscanCountResolved = overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getColumnStartIndexForOffset(this.props, scrollLeft, this._instanceProps);\n      var stopIndex = getColumnStopIndexForStartIndex(this.props, startIndex, scrollLeft, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || horizontalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || horizontalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    _proto._getVerticalRangeToRender = function _getVerticalRangeToRender() {\n      var _this$props7 = this.props,\n          columnCount = _this$props7.columnCount,\n          overscanCount = _this$props7.overscanCount,\n          overscanRowCount = _this$props7.overscanRowCount,\n          overscanRowsCount = _this$props7.overscanRowsCount,\n          rowCount = _this$props7.rowCount;\n      var _this$state5 = this.state,\n          isScrolling = _this$state5.isScrolling,\n          verticalScrollDirection = _this$state5.verticalScrollDirection,\n          scrollTop = _this$state5.scrollTop;\n      var overscanCountResolved = overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getRowStartIndexForOffset(this.props, scrollTop, this._instanceProps);\n      var stopIndex = getRowStopIndexForStartIndex(this.props, startIndex, scrollTop, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || verticalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || verticalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return Grid;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    useIsScrolling: false\n  }, _class;\n}\n\nvar validateSharedProps = function validateSharedProps(_ref5, _ref6) {\n  var children = _ref5.children,\n      direction = _ref5.direction,\n      height = _ref5.height,\n      innerTagName = _ref5.innerTagName,\n      outerTagName = _ref5.outerTagName,\n      overscanColumnsCount = _ref5.overscanColumnsCount,\n      overscanCount = _ref5.overscanCount,\n      overscanRowsCount = _ref5.overscanRowsCount,\n      width = _ref5.width;\n  var instance = _ref6.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn('The overscanCount prop has been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (typeof overscanColumnsCount === 'number' || typeof overscanRowsCount === 'number') {\n      if (devWarningsOverscanRowsColumnsCount && !devWarningsOverscanRowsColumnsCount.has(instance)) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn('The overscanColumnsCount and overscanRowsCount props have been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    if (typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Grids must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    }\n\n    if (typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Grids must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\nvar getEstimatedTotalHeight = function getEstimatedTotalHeight(_ref, _ref2) {\n  var rowCount = _ref.rowCount;\n  var rowMetadataMap = _ref2.rowMetadataMap,\n      estimatedRowHeight = _ref2.estimatedRowHeight,\n      lastMeasuredRowIndex = _ref2.lastMeasuredRowIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredRowIndex >= rowCount) {\n    lastMeasuredRowIndex = rowCount - 1;\n  }\n\n  if (lastMeasuredRowIndex >= 0) {\n    var itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getEstimatedTotalWidth = function getEstimatedTotalWidth(_ref3, _ref4) {\n  var columnCount = _ref3.columnCount;\n  var columnMetadataMap = _ref4.columnMetadataMap,\n      estimatedColumnWidth = _ref4.estimatedColumnWidth,\n      lastMeasuredColumnIndex = _ref4.lastMeasuredColumnIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredColumnIndex >= columnCount) {\n    lastMeasuredColumnIndex = columnCount - 1;\n  }\n\n  if (lastMeasuredColumnIndex >= 0) {\n    var itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getItemMetadata = function getItemMetadata(itemType, props, index, instanceProps) {\n  var itemMetadataMap, itemSize, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    itemSize = props.columnWidth;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    itemSize = props.rowHeight;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    if (itemType === 'column') {\n      instanceProps.lastMeasuredColumnIndex = index;\n    } else {\n      instanceProps.lastMeasuredRowIndex = index;\n    }\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem = function findNearestItem(itemType, props, instanceProps, offset) {\n  var itemMetadataMap, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(itemType, props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(itemType, props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch = function findNearestItemBinarySearch(itemType, props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata(itemType, props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch = function findNearestItemExponentialSearch(itemType, props, instanceProps, index, offset) {\n  var itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata(itemType, props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(itemType, props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getOffsetForIndexAndAlignment = function getOffsetForIndexAndAlignment(itemType, props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n  var size = itemType === 'column' ? props.width : props.height;\n  var itemMetadata = getItemMetadata(itemType, props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n  // To ensure it reflects actual measurements instead of just estimates.\n\n  var estimatedTotalSize = itemType === 'column' ? getEstimatedTotalWidth(props, instanceProps) : getEstimatedTotalHeight(props, instanceProps);\n  var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n  var minOffset = Math.max(0, itemMetadata.offset - size + scrollbarSize + itemMetadata.size);\n\n  if (align === 'smart') {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      align = 'auto';\n    } else {\n      align = 'center';\n    }\n  }\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n    case 'auto':\n    default:\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset;\n      } else if (minOffset > maxOffset) {\n        // Because we only take into account the scrollbar size when calculating minOffset\n        // this value can be larger than maxOffset when at the end of the list\n        return minOffset;\n      } else if (scrollOffset < minOffset) {\n        return minOffset;\n      } else {\n        return maxOffset;\n      }\n\n  }\n};\n\nvar VariableSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(props, index, instanceProps) {\n    return getItemMetadata('column', props, index, instanceProps).offset;\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(props, scrollLeft, instanceProps) {\n    return findNearestItem('column', props, instanceProps, scrollLeft);\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, instanceProps) {\n    var columnCount = props.columnCount,\n        width = props.width;\n    var itemMetadata = getItemMetadata('column', props, startIndex, instanceProps);\n    var maxOffset = scrollLeft + width;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  getColumnWidth: function getColumnWidth(props, index, instanceProps) {\n    return instanceProps.columnMetadataMap[index].size;\n  },\n  getEstimatedTotalHeight: getEstimatedTotalHeight,\n  getEstimatedTotalWidth: getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('column', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('row', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getRowOffset: function getRowOffset(props, index, instanceProps) {\n    return getItemMetadata('row', props, index, instanceProps).offset;\n  },\n  getRowHeight: function getRowHeight(props, index, instanceProps) {\n    return instanceProps.rowMetadataMap[index].size;\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(props, scrollTop, instanceProps) {\n    return findNearestItem('row', props, instanceProps, scrollTop);\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(props, startIndex, scrollTop, instanceProps) {\n    var rowCount = props.rowCount,\n        height = props.height;\n    var itemMetadata = getItemMetadata('row', props, startIndex, instanceProps);\n    var maxOffset = scrollTop + height;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref5 = props,\n        estimatedColumnWidth = _ref5.estimatedColumnWidth,\n        estimatedRowHeight = _ref5.estimatedRowHeight;\n    var instanceProps = {\n      columnMetadataMap: {},\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredColumnIndex: -1,\n      lastMeasuredRowIndex: -1,\n      rowMetadataMap: {}\n    };\n\n    instance.resetAfterColumnIndex = function (columnIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        columnIndex: columnIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterRowIndex = function (rowIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        rowIndex: rowIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterIndices = function (_ref6) {\n      var columnIndex = _ref6.columnIndex,\n          rowIndex = _ref6.rowIndex,\n          _ref6$shouldForceUpda = _ref6.shouldForceUpdate,\n          shouldForceUpdate = _ref6$shouldForceUpda === void 0 ? true : _ref6$shouldForceUpda;\n\n      if (typeof columnIndex === 'number') {\n        instanceProps.lastMeasuredColumnIndex = Math.min(instanceProps.lastMeasuredColumnIndex, columnIndex - 1);\n      }\n\n      if (typeof rowIndex === 'number') {\n        instanceProps.lastMeasuredRowIndex = Math.min(instanceProps.lastMeasuredRowIndex, rowIndex - 1);\n      } // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref7) {\n    var columnWidth = _ref7.columnWidth,\n        rowHeight = _ref7.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'function') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      } else if (typeof rowHeight !== 'function') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150;\n\nvar defaultItemKey$1 = function defaultItemKey(index, data) {\n  return index;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsDirection = null;\nvar devWarningsTagName$1 = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = /*#__PURE__*/new WeakSet();\n    devWarningsTagName$1 = /*#__PURE__*/new WeakSet();\n  }\n}\n\nfunction createListComponent(_ref) {\n  var _class;\n\n  var getItemOffset = _ref.getItemOffset,\n      getEstimatedTotalSize = _ref.getEstimatedTotalSize,\n      getItemSize = _ref.getItemSize,\n      getOffsetForIndexAndAlignment = _ref.getOffsetForIndexAndAlignment,\n      getStartIndexForOffset = _ref.getStartIndexForOffset,\n      getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,\n      initInstanceProps = _ref.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(List, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function List(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._outerRef = void 0;\n      _this._resetIsScrollingTimeoutId = null;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        scrollDirection: 'forward',\n        scrollOffset: typeof _this.props.initialScrollOffset === 'number' ? _this.props.initialScrollOffset : 0,\n        scrollUpdateWasRequested: false\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanStartIndex: overscanStartIndex,\n          overscanStopIndex: overscanStopIndex,\n          visibleStartIndex: visibleStartIndex,\n          visibleStopIndex: visibleStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollDirection, scrollOffset, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          scrollDirection: scrollDirection,\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (index) {\n        var _this$props = _this.props,\n            direction = _this$props.direction,\n            itemSize = _this$props.itemSize,\n            layout = _this$props.layout;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && itemSize, shouldResetStyleCacheOnItemSizeChange && layout, shouldResetStyleCacheOnItemSizeChange && direction);\n\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(index)) {\n          style = itemStyleCache[index];\n        } else {\n          var _offset = getItemOffset(_this.props, index, _this._instanceProps);\n\n          var size = getItemSize(_this.props, index, _this._instanceProps); // TODO Deprecate direction \"horizontal\"\n\n          var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n          var isRtl = direction === 'rtl';\n          var offsetHorizontal = isHorizontal ? _offset : 0;\n          itemStyleCache[index] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : offsetHorizontal,\n            right: isRtl ? offsetHorizontal : undefined,\n            top: !isHorizontal ? _offset : 0,\n            height: !isHorizontal ? size : '100%',\n            width: isHorizontal ? size : '100%'\n          };\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScrollHorizontal = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollLeft) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction;\n          var scrollOffset = scrollLeft;\n\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n            // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                scrollOffset = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                scrollOffset = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._onScrollVertical = function (event) {\n        var _event$currentTarget2 = event.currentTarget,\n            clientHeight = _event$currentTarget2.clientHeight,\n            scrollHeight = _event$currentTarget2.scrollHeight,\n            scrollTop = _event$currentTarget2.scrollTop;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          var scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL$1);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1, null);\n        });\n      };\n\n      return _this;\n    }\n\n    List.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps$1(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = List.prototype;\n\n    _proto.scrollTo = function scrollTo(scrollOffset) {\n      scrollOffset = Math.max(0, scrollOffset);\n      this.setState(function (prevState) {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n\n        return {\n          scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(index, align) {\n      if (align === void 0) {\n        align = 'auto';\n      }\n\n      var _this$props2 = this.props,\n          itemCount = _this$props2.itemCount,\n          layout = _this$props2.layout;\n      var scrollOffset = this.state.scrollOffset;\n      index = Math.max(0, Math.min(index, itemCount - 1)); // The scrollbar size should be considered when scrolling an item into view, to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      // This is an edge case for lists; normally they only scroll in the dominant direction.\n\n      var scrollbarSize = 0;\n\n      if (this._outerRef) {\n        var outerRef = this._outerRef;\n\n        if (layout === 'vertical') {\n          scrollbarSize = outerRef.scrollWidth > outerRef.clientWidth ? getScrollbarSize() : 0;\n        } else {\n          scrollbarSize = outerRef.scrollHeight > outerRef.clientHeight ? getScrollbarSize() : 0;\n        }\n      }\n\n      this.scrollTo(getOffsetForIndexAndAlignment(this.props, index, align, scrollOffset, this._instanceProps, scrollbarSize));\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          direction = _this$props3.direction,\n          initialScrollOffset = _this$props3.initialScrollOffset,\n          layout = _this$props3.layout;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var _this$props4 = this.props,\n          direction = _this$props4.direction,\n          layout = _this$props4.layout;\n      var _this$state = this.state,\n          scrollOffset = _this$state.scrollOffset,\n          scrollUpdateWasRequested = _this$state.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n\n              default:\n                var clientWidth = outerRef.clientWidth,\n                    scrollWidth = outerRef.scrollWidth;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          direction = _this$props5.direction,\n          height = _this$props5.height,\n          innerRef = _this$props5.innerRef,\n          innerElementType = _this$props5.innerElementType,\n          innerTagName = _this$props5.innerTagName,\n          itemCount = _this$props5.itemCount,\n          itemData = _this$props5.itemData,\n          _this$props5$itemKey = _this$props5.itemKey,\n          itemKey = _this$props5$itemKey === void 0 ? defaultItemKey$1 : _this$props5$itemKey,\n          layout = _this$props5.layout,\n          outerElementType = _this$props5.outerElementType,\n          outerTagName = _this$props5.outerTagName,\n          style = _this$props5.style,\n          useIsScrolling = _this$props5.useIsScrolling,\n          width = _this$props5.width;\n      var isScrolling = this.state.isScrolling; // TODO Deprecate direction \"horizontal\"\n\n      var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n      var onScroll = isHorizontal ? this._onScrollHorizontal : this._onScrollVertical;\n\n      var _this$_getRangeToRend = this._getRangeToRender(),\n          startIndex = _this$_getRangeToRend[0],\n          stopIndex = _this$_getRangeToRend[1];\n\n      var items = [];\n\n      if (itemCount > 0) {\n        for (var _index = startIndex; _index <= stopIndex; _index++) {\n          items.push(createElement(children, {\n            data: itemData,\n            key: itemKey(_index, itemData),\n            index: _index,\n            isScrolling: useIsScrolling ? isScrolling : undefined,\n            style: this._getItemStyle(_index)\n          }));\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalSize = getEstimatedTotalSize(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: isHorizontal ? '100%' : estimatedTotalSize,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: isHorizontal ? estimatedTotalSize : '100%'\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        var itemCount = this.props.itemCount;\n\n        if (itemCount > 0) {\n          var _this$_getRangeToRend2 = this._getRangeToRender(),\n              _overscanStartIndex = _this$_getRangeToRend2[0],\n              _overscanStopIndex = _this$_getRangeToRend2[1],\n              _visibleStartIndex = _this$_getRangeToRend2[2],\n              _visibleStopIndex = _this$_getRangeToRend2[3];\n\n          this._callOnItemsRendered(_overscanStartIndex, _overscanStopIndex, _visibleStartIndex, _visibleStopIndex);\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        var _this$state2 = this.state,\n            _scrollDirection = _this$state2.scrollDirection,\n            _scrollOffset = _this$state2.scrollOffset,\n            _scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n        this._callOnScroll(_scrollDirection, _scrollOffset, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getRangeToRender = function _getRangeToRender() {\n      var _this$props6 = this.props,\n          itemCount = _this$props6.itemCount,\n          overscanCount = _this$props6.overscanCount;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollDirection = _this$state3.scrollDirection,\n          scrollOffset = _this$state3.scrollOffset;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getStartIndexForOffset(this.props, scrollOffset, this._instanceProps);\n      var stopIndex = getStopIndexForStartIndex(this.props, startIndex, scrollOffset, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || scrollDirection === 'backward' ? Math.max(1, overscanCount) : 1;\n      var overscanForward = !isScrolling || scrollDirection === 'forward' ? Math.max(1, overscanCount) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return List;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    layout: 'vertical',\n    overscanCount: 2,\n    useIsScrolling: false\n  }, _class;\n} // NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nvar validateSharedProps$1 = function validateSharedProps(_ref2, _ref3) {\n  var children = _ref2.children,\n      direction = _ref2.direction,\n      height = _ref2.height,\n      layout = _ref2.layout,\n      innerTagName = _ref2.innerTagName,\n      outerTagName = _ref2.outerTagName,\n      width = _ref2.width;\n  var instance = _ref3.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName$1 && !devWarningsTagName$1.has(instance)) {\n        devWarningsTagName$1.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    } // TODO Deprecate direction \"horizontal\"\n\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn('The direction prop should be either \"ltr\" (default) or \"rtl\". ' + 'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.');\n        }\n\n        break;\n\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"layout\" prop has been specified. ' + 'Value should be either \"horizontal\" or \"vertical\". ' + (\"\\\"\" + layout + \"\\\" was specified.\"));\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Horizontal lists must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Vertical lists must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE$1 = 50;\n\nvar getItemMetadata$1 = function getItemMetadata(props, index, instanceProps) {\n  var _ref = props,\n      itemSize = _ref.itemSize;\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem$1 = function findNearestItem(props, instanceProps, offset) {\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch$1(props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch$1(props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch$1 = function findNearestItemBinarySearch(props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata$1(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch$1 = function findNearestItemExponentialSearch(props, instanceProps, index, offset) {\n  var itemCount = props.itemCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata$1(props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch$1(props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getEstimatedTotalSize = function getEstimatedTotalSize(_ref2, _ref3) {\n  var itemCount = _ref2.itemCount;\n  var itemMetadataMap = _ref3.itemMetadataMap,\n      estimatedItemSize = _ref3.estimatedItemSize,\n      lastMeasuredIndex = _ref3.lastMeasuredIndex;\n  var totalSizeOfMeasuredItems = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nvar VariableSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(props, index, instanceProps) {\n    return getItemMetadata$1(props, index, instanceProps).offset;\n  },\n  getItemSize: function getItemSize(props, index, instanceProps) {\n    return instanceProps.itemMetadataMap[index].size;\n  },\n  getEstimatedTotalSize: getEstimatedTotalSize,\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = props.direction,\n        height = props.height,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n\n    var estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n    var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n    var minOffset = Math.max(0, itemMetadata.offset - size + itemMetadata.size + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(props, offset, instanceProps) {\n    return findNearestItem$1(props, instanceProps, offset);\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(props, startIndex, scrollOffset, instanceProps) {\n    var direction = props.direction,\n        height = props.height,\n        itemCount = props.itemCount,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, startIndex, instanceProps);\n    var maxOffset = scrollOffset + size;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata$1(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref4 = props,\n        estimatedItemSize = _ref4.estimatedItemSize;\n    var instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE$1,\n      lastMeasuredIndex: -1\n    };\n\n    instance.resetAfterIndex = function (index, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instanceProps.lastMeasuredIndex = Math.min(instanceProps.lastMeasuredIndex, index - 1); // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref5) {\n    var itemSize = _ref5.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(_ref, index) {\n    var columnWidth = _ref.columnWidth;\n    return index * columnWidth;\n  },\n  getColumnWidth: function getColumnWidth(_ref2, index) {\n    var columnWidth = _ref2.columnWidth;\n    return columnWidth;\n  },\n  getRowOffset: function getRowOffset(_ref3, index) {\n    var rowHeight = _ref3.rowHeight;\n    return index * rowHeight;\n  },\n  getRowHeight: function getRowHeight(_ref4, index) {\n    var rowHeight = _ref4.rowHeight;\n    return rowHeight;\n  },\n  getEstimatedTotalHeight: function getEstimatedTotalHeight(_ref5) {\n    var rowCount = _ref5.rowCount,\n        rowHeight = _ref5.rowHeight;\n    return rowHeight * rowCount;\n  },\n  getEstimatedTotalWidth: function getEstimatedTotalWidth(_ref6) {\n    var columnCount = _ref6.columnCount,\n        columnWidth = _ref6.columnWidth;\n    return columnWidth * columnCount;\n  },\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(_ref7, columnIndex, align, scrollLeft, instanceProps, scrollbarSize) {\n    var columnCount = _ref7.columnCount,\n        columnWidth = _ref7.columnWidth,\n        width = _ref7.width;\n    var lastColumnOffset = Math.max(0, columnCount * columnWidth - width);\n    var maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);\n    var minOffset = Math.max(0, columnIndex * columnWidth - width + scrollbarSize + columnWidth);\n\n    if (align === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollLeft < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(_ref8, rowIndex, align, scrollTop, instanceProps, scrollbarSize) {\n    var rowHeight = _ref8.rowHeight,\n        height = _ref8.height,\n        rowCount = _ref8.rowCount;\n    var lastRowOffset = Math.max(0, rowCount * rowHeight - height);\n    var maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);\n    var minOffset = Math.max(0, rowIndex * rowHeight - height + scrollbarSize + rowHeight);\n\n    if (align === 'smart') {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollTop < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(_ref9, scrollLeft) {\n    var columnWidth = _ref9.columnWidth,\n        columnCount = _ref9.columnCount;\n    return Math.max(0, Math.min(columnCount - 1, Math.floor(scrollLeft / columnWidth)));\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(_ref10, startIndex, scrollLeft) {\n    var columnWidth = _ref10.columnWidth,\n        columnCount = _ref10.columnCount,\n        width = _ref10.width;\n    var left = startIndex * columnWidth;\n    var numVisibleColumns = Math.ceil((width + scrollLeft - left) / columnWidth);\n    return Math.max(0, Math.min(columnCount - 1, startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(_ref11, scrollTop) {\n    var rowHeight = _ref11.rowHeight,\n        rowCount = _ref11.rowCount;\n    return Math.max(0, Math.min(rowCount - 1, Math.floor(scrollTop / rowHeight)));\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(_ref12, startIndex, scrollTop) {\n    var rowHeight = _ref12.rowHeight,\n        rowCount = _ref12.rowCount,\n        height = _ref12.height;\n    var top = startIndex * rowHeight;\n    var numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);\n    return Math.max(0, Math.min(rowCount - 1, startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref13) {\n    var columnWidth = _ref13.columnWidth,\n        rowHeight = _ref13.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'number') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      }\n\n      if (typeof rowHeight !== 'number') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(_ref, index) {\n    var itemSize = _ref.itemSize;\n    return index * itemSize;\n  },\n  getItemSize: function getItemSize(_ref2, index) {\n    var itemSize = _ref2.itemSize;\n    return itemSize;\n  },\n  getEstimatedTotalSize: function getEstimatedTotalSize(_ref3) {\n    var itemCount = _ref3.itemCount,\n        itemSize = _ref3.itemSize;\n    return itemSize * itemCount;\n  },\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(_ref4, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = _ref4.direction,\n        height = _ref4.height,\n        itemCount = _ref4.itemCount,\n        itemSize = _ref4.itemSize,\n        layout = _ref4.layout,\n        width = _ref4.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var lastItemOffset = Math.max(0, itemCount * itemSize - size);\n    var maxOffset = Math.min(lastItemOffset, index * itemSize);\n    var minOffset = Math.max(0, index * itemSize - size + itemSize + scrollbarSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        {\n          // \"Centered\" offset is usually the average of the min and max.\n          // But near the edges of the list, this doesn't hold true.\n          var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n          if (middleOffset < Math.ceil(size / 2)) {\n            return 0; // near the beginning\n          } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n            return lastItemOffset; // near the end\n          } else {\n            return middleOffset;\n          }\n        }\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(_ref5, offset) {\n    var itemCount = _ref5.itemCount,\n        itemSize = _ref5.itemSize;\n    return Math.max(0, Math.min(itemCount - 1, Math.floor(offset / itemSize)));\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(_ref6, startIndex, scrollOffset) {\n    var direction = _ref6.direction,\n        height = _ref6.height,\n        itemCount = _ref6.itemCount,\n        itemSize = _ref6.itemSize,\n        layout = _ref6.layout,\n        width = _ref6.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var offset = startIndex * itemSize;\n    var size = isHorizontal ? width : height;\n    var numVisibleItems = Math.ceil((size + scrollOffset - offset) / itemSize);\n    return Math.max(0, Math.min(itemCount - 1, startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref7) {\n    var itemSize = _ref7.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nfunction shallowDiffers(prev, next) {\n  for (var attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n\n  for (var _attribute in next) {\n    if (prev[_attribute] !== next[_attribute]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar _excluded = [\"style\"],\n    _excluded2 = [\"style\"];\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\n\nfunction areEqual(prevProps, nextProps) {\n  var prevStyle = prevProps.style,\n      prevRest = _objectWithoutPropertiesLoose(prevProps, _excluded);\n\n  var nextStyle = nextProps.style,\n      nextRest = _objectWithoutPropertiesLoose(nextProps, _excluded2);\n\n  return !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest);\n}\n\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\n\nfunction shouldComponentUpdate(nextProps, nextState) {\n  return !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState);\n}\n\nexport { FixedSizeGrid, FixedSizeList, VariableSizeGrid, VariableSizeList, areEqual, shouldComponentUpdate };\n//# sourceMappingURL=index.esm.js.map\n"],"mappings":"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"}